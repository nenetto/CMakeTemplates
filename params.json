{"name":"CMakeTemplates","tagline":"","body":"### Welcome to CMakeTemplates.\r\nThis project allow user create CMake **C/C++** configuration structure for any project and its dependencies. The main purpose is allow users to develop easily using CMake dealing with dependencies between projects, libraries and executables. \r\n\r\n### Contain\r\nThe repository contain two folders: \r\n\r\n1. CMakeProject\r\n2. CMakeSuperBuildTemplate\r\n\r\nCMakeProject configures executables, dynamic library or static library using CMake and creates the configuration folder structure for developing. On the other hand, CMakeSuperBuildTemplate is a template for a SuperBuild configuration folder structure. With minimal changes on the CMakeLists.txt files and adding your code files, configuration structure will be ready for your development, taking care of internal and external dependencies. \r\n\r\n### Tutorial\r\n\r\n#### Creating a simple executable (library)\r\n\r\nThis example is useful when you are creating an executable or library that depends **only** on standard libraries of C/C++\r\n\r\n1. Configure CMakeProject using CMake\r\n2. Change the name of your executable/library, this will be the project name\r\n3. Change the folder where your source code will be generated **using the same name that the project name**\r\n\r\n#### Creating your SuperBuild project\r\n\r\nThis is strongly recommended even if you are just creating a new library or executable. Template will configure automatically [Doxygen](http://www.stack.nl/~dimitri/doxygen/) for documentation of your project and Git for external dependencies if your executable or library need them.\r\n\r\n1. Create an empty folder for your SuperBuild\r\n2. Copy the content of [CMakeSuperBuildTemplate]() into your folder\r\n3. Open the file CMakeLists.txt of your SuperBuild folder and change the name project for the folder's name\r\n\r\nThis project comes with 4 example projects inside: InternalLibrary, InternalExecutable, ExternalLibrary and ExternalExecutable in order to \r\n\r\n#### Combining both\r\n\r\n\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile.\r\nThis project uses [CMakeAll](https://github.com/auneri/CMakeAll). \r\nSpecial thanks to @auneri for his valuable help and teaching skills.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}